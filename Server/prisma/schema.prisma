
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  userName  String
  email     String      @unique
  birthday  String?
  password  String?
  coverUrl  String?     @default("https://images.unsplash.com/photo-1694376015496-140430f9bf88?q=80&w=1528&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D")
  bio       String?
  pdp       String?     @default("https://i.pinimg.com/736x/3f/94/70/3f9470b34a8e3f526dbdb022f9f19cf7.jpg")
  posts     Post[]
  questions Question[]
  favorites Favorites[]
  followers Followers[]
  basket    Basket[]
}

model Brand {
  id        String      @id @default(uuid())
  brandName String
  email     String      @unique
  password  String
  imageUrl  String
  products  Product[]
  followers Followers[]
}

model Product {
  id          String   @id @default(uuid())
  productName String
  price       Int
  likes       Int     @default(0)
  category    String
  imageUrl    String[]
  description String
  rating      Int
  new         Boolean  @default(true)
  brandId     String
  Brand     Brand       @relation(fields: [brandId], references: [id])
  favorites Favorites[]
  basket    Basket[]
}

model Post {
  id       String @id @default(uuid())
  content  String
  imageUrl String
  userId   String
  User     User   @relation(fields: [userId], references: [id])
}

model Question {
  id      String @id @default(uuid())
  content String
  userId  String

  User User @relation(fields: [userId], references: [id])
}

model Favorites {
  id        String  @id @default(uuid())
  userId    String
  User      User    @relation(fields: [userId], references: [id])
  productId String
  Product   Product @relation(fields: [productId], references: [id])
}

model Followers {
  id      String @id @default(uuid())
  brandId String
  Brand   Brand  @relation(fields: [brandId], references: [id])
  userId  String
  User    User   @relation(fields: [userId], references: [id])
}

model Basket {
  id        String  @id @default(uuid())
  userId    String
  Product   Product @relation(fields: [productId], references: [id])
  productId String
  User      User    @relation(fields: [userId], references: [id])
}
